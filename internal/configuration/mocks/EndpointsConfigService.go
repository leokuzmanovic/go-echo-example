// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// EndpointsConfigService is an autogenerated mock type for the EndpointsConfigService type
type EndpointsConfigService struct {
	mock.Mock
}

// AreMetricsEnabled provides a mock function with given fields: path
func (_m *EndpointsConfigService) AreMetricsEnabled(path string) bool {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for AreMetricsEnabled")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsAuthRequired provides a mock function with given fields: path, method
func (_m *EndpointsConfigService) IsAuthRequired(path string, method string) bool {
	ret := _m.Called(path, method)

	if len(ret) == 0 {
		panic("no return value specified for IsAuthRequired")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(path, method)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewEndpointsConfigService creates a new instance of EndpointsConfigService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEndpointsConfigService(t interface {
	mock.TestingT
	Cleanup(func())
}) *EndpointsConfigService {
	mock := &EndpointsConfigService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
